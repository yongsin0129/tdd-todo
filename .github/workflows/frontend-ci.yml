name: Frontend CI/CD (Non-blocking)

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'frontend/**'

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [24.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        continue-on-error: true

      - name: Run type check
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Run tests with coverage
        run: npm run test:coverage
        continue-on-error: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
        continue-on-error: true

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results
          path: |
            frontend/coverage/
            frontend/test-results/
          retention-days: 7
        continue-on-error: true

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    if: always()

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        continue-on-error: true

      - name: Build production bundle
        run: npm run build
        continue-on-error: true

      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "⚠️ Build failed: dist directory not found"
          else
            echo "✅ Build successful, dist directory created"
            ls -lah dist/
          fi
        continue-on-error: true

      - name: Analyze bundle size
        run: |
          echo "📦 Frontend bundle size:"
          du -sh dist/ || echo "⚠️ dist directory not found"
          find dist -name "*.js" -exec du -h {} \; 2>/dev/null | sort -h || echo "⚠️ No JS files found"
        continue-on-error: true

  deploy:
    name: Deploy Notification
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Deployment Info
        run: |
          echo "📝 CI 執行完成 (非阻擋模式)"
          echo ""
          echo "✨ Vercel & Zeabur 自動部署:"
          echo "   - Vercel: https://vercel.com/dashboard"
          echo "   - Zeabur: https://dash.zeabur.com"
          echo "   - 兩個平台會自動檢測並部署變更"
          echo ""
          echo "📊 查看詳細測試結果請到 Actions 頁面的 Artifacts"
