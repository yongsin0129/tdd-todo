name: Backend CI/CD (Non-blocking)

on:
  push:
    branches: [main, master, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'backend/**'

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [24.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci
        continue-on-error: true

      - name: Generate Prisma Client
        run: npx prisma generate
        continue-on-error: true

      - name: Setup test database
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: file:./test.db
        continue-on-error: true

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Run Prettier check
        run: npm run format:check
        continue-on-error: true

      - name: Run tests
        run: npm test
        env:
          DATABASE_URL: file:./test.db
          NODE_ENV: test
        continue-on-error: true

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          DATABASE_URL: file:./test.db
          NODE_ENV: test
        continue-on-error: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
        continue-on-error: true

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: |
            backend/coverage/
            backend/test-results/
          retention-days: 7
        continue-on-error: true

  build:
    name: Build Backend
    runs-on: ubuntu-latest
    if: always()

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci
        continue-on-error: true

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: file:./test.db
        continue-on-error: true

      - name: Build TypeScript
        run: npm run build
        continue-on-error: true

      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "⚠️ Build failed: dist directory not found"
          else
            echo "✅ Build successful, dist directory created"
            ls -la dist/
          fi
        continue-on-error: true

  deploy:
    name: Deploy Notification
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: Deployment Info
        run: |
          echo "📝 CI 執行完成 (非阻擋模式)"
          echo ""
          echo "✨ Zeabur & Vercel 自動部署:"
          echo "   - Zeabur: https://dash.zeabur.com"
          echo "   - Vercel: https://vercel.com/dashboard"
          echo "   - 兩個平台會自動檢測並部署變更"
          echo ""
          echo "📊 查看詳細測試結果請到 Actions 頁面的 Artifacts"
